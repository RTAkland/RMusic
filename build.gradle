plugins {
    id 'fabric-loom' version '1.0.17'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
}

version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.fabricmc:fabric-language-kotlin:1.9.0+kotlin.1.8.0"
    implementation("com.github.goxr3plus:java-stream-player:10.0.2")
    implementation("org.jflac:jflac-codec:1.5.2")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0")
    implementation("com.googlecode.soundlibs:soundlibs:1.4")
    implementation("org.junit.jupiter:junit-jupiter-api:5.9.2")
    embed(api("com.github.goxr3plus:java-stream-player:10.0.2"))
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name + "-" + project.fabric_version
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from configurations.embed.collect {
        it.isDirectory() ? it : zipTree(it)
    }
    from("LICENSE") {
        rename { it }
    }
}


compileKotlin {
    kotlinOptions.jvmTarget = "17"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "17"
}
